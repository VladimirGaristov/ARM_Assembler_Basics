                     BSP_LED_Toggle:

;Push R3 and the return address to the stack to preserve their values
08002398: 0x000008b5   	push    {r3, lr}

;Load GPIO_PIN in R3
0800239a: 0x0000044b   	ldr     r3, [pc, #16]   ; (0x80023ac <BSP_LED_Toggle+20>)
;Shift Led 1 bit to the left because GPIO_PIN is an array of 16-bit integers
;Load the Led-th item from GPIO_PIN in R1
0800239c: 0x33f81010   	ldrh.w  r1, [r3, r0, lsl #1]

;Load GPIO_PORT in R3
080023a0: 0x0000034b   	ldr     r3, [pc, #12]   ; (0x80023b0 <BSP_LED_Toggle+24>)
;Shift Led 2 bits to the left because GPIO_PORT is an array of 32-bit pointers to structures
;Load the Led-th item from GPIO_PORT in R0
080023a2: 0x53f82000   	ldr.w   r0, [r3, r0, lsl #2]

;Call HAL_GPIO_TogglePin()
080023a6: 0xfef79dfa   	bl      0x80008e4 <HAL_GPIO_TogglePin>


;Restore the value of R3
;Return by poping the return address directly into the Program Counter
080023aa: 0x000008bd   	pop     {r3, pc}

;Array start pointers
080023ac: 0x00008424   	movs    r4, #132        ; 0x84		;GPIO_PIN lsB
080023ae: 0x00000008   	lsrs    r0, r0, #32			;GPIO_PIN msB
080023b0: 0x00000c00   	movs    r4, r1			;GPIO_PORT lsB
080023b2: 0x00000020   	movs    r0, #0			;GPIO_PORT msB


void BSP_LED_Toggle(Led_TypeDef Led)
{
  HAL_GPIO_TogglePin(GPIO_PORT[Led], GPIO_PIN[Led]);
}